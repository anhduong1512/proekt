{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Header from \"./Header\";\nimport ListItems from \"./ListItems\";\nimport Form from \"./Form\";\nexport default function App() {\n  var _useState = useState([{\n    text: 'Купить молоко',\n    key: '1'\n  }, {\n    text: 'Купить воду',\n    key: '2'\n  }, {\n    text: 'Купить еду',\n    key: '3'\n  }, {\n    text: 'Купить еду для собаки',\n    key: '4'\n  }, {\n    text: 'Купить еду для кота',\n    key: '5'\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      listOfItems = _useState2[0],\n      setListOfItems = _useState2[1];\n\n  var addHandler = function addHandler(text) {\n    setListOfItems(function (list) {\n      return [{\n        text: text,\n        key: Math.random().toString(36).substring(7)\n      }].concat(_toConsumableArray(list));\n    });\n  };\n\n  var deleteHandler = function deleteHandler(key) {\n    setListOfItems(function (list) {\n      return list.filter(function (listOfItems) {\n        return listOfItems.key != key;\n      });\n    });\n  };\n\n  return React.createElement(View, null, React.createElement(Header, null), React.createElement(Form, {\n    addHandler: addHandler\n  }), React.createElement(View, null, React.createElement(FlatList, {\n    data: listOfItems,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(ListItems, {\n        el: item,\n        deleteHandler: deleteHandler\n      });\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Anh Duong/Desktop/JS/project/App.js"],"names":["StatusBar","React","Header","ListItems","Form","App","useState","text","key","listOfItems","setListOfItems","addHandler","list","Math","random","toString","substring","deleteHandler","filter","item","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,OAAOC,IAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAsCC,QAAQ,CAAE,CAC9C;AAACC,IAAAA,IAAI,EAAE,eAAP;AAAwBC,IAAAA,GAAG,EAAE;AAA7B,GAD8C,EAE9C;AAACD,IAAAA,IAAI,EAAE,aAAP;AAAsBC,IAAAA,GAAG,EAAE;AAA3B,GAF8C,EAG9C;AAACD,IAAAA,IAAI,EAAE,YAAP;AAAqBC,IAAAA,GAAG,EAAE;AAA1B,GAH8C,EAI9C;AAACD,IAAAA,IAAI,EAAE,uBAAP;AAAgCC,IAAAA,GAAG,EAAE;AAArC,GAJ8C,EAK9C;AAACD,IAAAA,IAAI,EAAE,qBAAP;AAA8BC,IAAAA,GAAG,EAAE;AAAnC,GAL8C,CAAF,CAA9C;AAAA;AAAA,MAAOC,WAAP;AAAA,MAAoBC,cAApB;;AAOA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACJ,IAAD,EAAU;AAC3BG,IAAAA,cAAc,CAAC,UAACE,IAAD,EAAU;AACvB,cACE;AAACL,QAAAA,IAAI,EAAEA,IAAP;AAAaC,QAAAA,GAAG,EAAEK,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC;AAAlB,OADF,4BAEKJ,IAFL;AAID,KALa,CAAd;AAOD,GARD;;AASA,MAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAACT,GAAD,EAAQ;AAC5BE,IAAAA,cAAc,CAAE,UAACE,IAAD,EAChB;AACE,aAAOA,IAAI,CAACM,MAAL,CAAa,UAAAT,WAAW;AAAA,eAAIA,WAAW,CAACD,GAAZ,IAAmBA,GAAvB;AAAA,OAAxB,CAAP;AACD,KAHa,CAAd;AAID,GALD;;AAME,SACE,oBAAC,IAAD,QACE,oBAAC,MAAD,OADF,EAEE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAIG;AAApB,IAFF,EAGE,oBAAC,IAAD,QACA,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAIF,WAAlB;AAA+B,IAAA,UAAU,EAAI;AAAA,UAAEU,IAAF,QAAEA,IAAF;AAAA,aAC3C,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAIA,IAAjB;AAAuB,QAAA,aAAa,EAAIF;AAAxC,QAD2C;AAAA;AAA7C,IADA,CAHF,CADF;AAWH;AAED,IAAMG,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { Text, View, StyleSheet,} from 'react-native';\nimport Header from './Header';\nimport ListItems from './ListItems';\nimport Form from './Form';\n\nexport default function App() {\n  const [listOfItems, setListOfItems] = useState ([\n    {text: 'Купить молоко', key: '1'},\n    {text: 'Купить воду', key: '2'},\n    {text: 'Купить еду', key: '3'},\n    {text: 'Купить еду для собаки', key: '4'},\n    {text: 'Купить еду для кота', key: '5'},\n  ])\n  const addHandler = (text) => {\n    setListOfItems((list) => {\n      return [\n        {text: text, key: Math.random().toString(36).substring(7)},\n        ...list\n      ]\n    }\n    )\n  }\n  const deleteHandler = (key)=> {\n    setListOfItems( (list) => \n    {\n      return list.filter (listOfItems => listOfItems.key != key)\n    });\n  }\n    return (\n      <View>\n        <Header />\n        <Form addHandler = {addHandler}/>\n        <View>\n        <FlatList data = {listOfItems} renderItem = {({item})=> (\n          <ListItems el = {item} deleteHandler = {deleteHandler}/>\n        )}/>\n        </View>\n      </View>\n     );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\n"]},"metadata":{},"sourceType":"module"}