{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { gStyle } from \"./styles/style\";\nimport * as Font from 'expo-font';\nimport AppLoading from 'expo-app-loading';\nimport Main from \"./components/Main\";\nimport Contact from \"./components/Contact\";\nimport MainStack from \"./navigate\";\n\nvar fonts = function fonts() {\n  return Font.loadAsync({\n    'zen': require(\"./assets/ZenKurenaido-Regular.ttf\")\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      font = _useState2[0],\n      setFont = _useState2[1];\n\n  if (font) {\n    return React.createElement(View, {\n      style: gStyle.main\n    }, React.createElement(MainStack, null));\n  } else {\n    return React.createElement(AppLoading, {\n      startAsync: font,\n      onFinish: function onFinish() {\n        return setFont(true);\n      },\n      onError: console.warn\n    });\n  }\n\n  ;\n}\nvar styles = StyleSheet.create({\n  main: {}\n});","map":{"version":3,"sources":["C:/Users/Anh Duong/Desktop/JS/project/App.js"],"names":["StatusBar","React","useState","gStyle","Font","AppLoading","Main","Contact","MainStack","fonts","loadAsync","require","App","font","setFont","main","console","warn","styles","StyleSheet","create"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,SAAQC,MAAR;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,IAAP;AACA,OAAOC,OAAP;AACA,OAAOC,SAAP;;AACA,IAAMC,KAAK,GAAE,SAAPA,KAAO;AAAA,SAAIL,IAAI,CAACM,SAAL,CAAe;AAC9B,WAAOC,OAAO;AADgB,GAAf,CAAJ;AAAA,CAAb;;AAIA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAwBV,QAAQ,CAAE,KAAF,CAAhC;AAAA;AAAA,MAAOW,IAAP;AAAA,MAAYC,OAAZ;;AACA,MAAID,IAAJ,EACA;AACE,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAIV,MAAM,CAACY;AAAtB,OACM,oBAAC,SAAD,OADN,CADF;AAKD,GAPD,MASA;AACE,WACE,oBAAC,UAAD;AACA,MAAA,UAAU,EAAIF,IADd;AAEA,MAAA,QAAQ,EAAI;AAAA,eAAKC,OAAO,CAAC,IAAD,CAAZ;AAAA,OAFZ;AAGA,MAAA,OAAO,EAAIE,OAAO,CAACC;AAHnB,MADF;AAMD;;AACH;AACC;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,IAAI,EACJ;AAF+B,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View, Image } from 'react-native';\nimport {gStyle} from './styles/style';\nimport * as Font from 'expo-font';\nimport AppLoading from 'expo-app-loading';\nimport Main from './components/Main';\nimport Contact from './components/Contact';\nimport MainStack from './navigate';\nconst fonts =()=>Font.loadAsync({\n  'zen': require ('./assets/ZenKurenaido-Regular.ttf')\n}\n)\nexport default function App() {\n  const [font,setFont]  = useState (false);\n  if (font)\n  {\n    return (\n      <View style = {gStyle.main}>\n            <MainStack/>\n      </View>\n    )\n  }\n  else \n  {\n    return (\n      <AppLoading \n      startAsync = {font} \n      onFinish = {()=> setFont(true)}\n      onError = {console.warn} />\n    );\n  }\n;\n}\n\nconst styles = StyleSheet.create({\n  main:\n  {\n\n  }\n});\n"]},"metadata":{},"sourceType":"module"}